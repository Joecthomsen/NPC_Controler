// source: my_proto.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.Sec1Payload');
goog.provide('proto.Sec1Payload.PayloadCase');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.SessionCmd0');
goog.require('proto.SessionCmd1');
goog.require('proto.SessionResp0');
goog.require('proto.SessionResp1');

goog.forwardDeclare('proto.Sec1MsgType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Sec1Payload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.Sec1Payload.oneofGroups_);
};
goog.inherits(proto.Sec1Payload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Sec1Payload.displayName = 'proto.Sec1Payload';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.Sec1Payload.oneofGroups_ = [[20,21,22,23]];

/**
 * @enum {number}
 */
proto.Sec1Payload.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  SC0: 20,
  SR0: 21,
  SC1: 22,
  SR1: 23
};

/**
 * @return {proto.Sec1Payload.PayloadCase}
 */
proto.Sec1Payload.prototype.getPayloadCase = function() {
  return /** @type {proto.Sec1Payload.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.Sec1Payload.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Sec1Payload.prototype.toObject = function(opt_includeInstance) {
  return proto.Sec1Payload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Sec1Payload} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Sec1Payload.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sc0: (f = msg.getSc0()) && proto.SessionCmd0.toObject(includeInstance, f),
    sr0: (f = msg.getSr0()) && proto.SessionResp0.toObject(includeInstance, f),
    sc1: (f = msg.getSc1()) && proto.SessionCmd1.toObject(includeInstance, f),
    sr1: (f = msg.getSr1()) && proto.SessionResp1.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Sec1Payload}
 */
proto.Sec1Payload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Sec1Payload;
  return proto.Sec1Payload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Sec1Payload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Sec1Payload}
 */
proto.Sec1Payload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Sec1MsgType} */ (reader.readEnum());
      msg.setMsg(value);
      break;
    case 20:
      var value = new proto.SessionCmd0;
      reader.readMessage(value,proto.SessionCmd0.deserializeBinaryFromReader);
      msg.setSc0(value);
      break;
    case 21:
      var value = new proto.SessionResp0;
      reader.readMessage(value,proto.SessionResp0.deserializeBinaryFromReader);
      msg.setSr0(value);
      break;
    case 22:
      var value = new proto.SessionCmd1;
      reader.readMessage(value,proto.SessionCmd1.deserializeBinaryFromReader);
      msg.setSc1(value);
      break;
    case 23:
      var value = new proto.SessionResp1;
      reader.readMessage(value,proto.SessionResp1.deserializeBinaryFromReader);
      msg.setSr1(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Sec1Payload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Sec1Payload.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Sec1Payload} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Sec1Payload.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSc0();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.SessionCmd0.serializeBinaryToWriter
    );
  }
  f = message.getSr0();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.SessionResp0.serializeBinaryToWriter
    );
  }
  f = message.getSc1();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.SessionCmd1.serializeBinaryToWriter
    );
  }
  f = message.getSr1();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.SessionResp1.serializeBinaryToWriter
    );
  }
};


/**
 * optional Sec1MsgType msg = 1;
 * @return {!proto.Sec1MsgType}
 */
proto.Sec1Payload.prototype.getMsg = function() {
  return /** @type {!proto.Sec1MsgType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.Sec1MsgType} value
 * @return {!proto.Sec1Payload} returns this
 */
proto.Sec1Payload.prototype.setMsg = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional SessionCmd0 sc0 = 20;
 * @return {?proto.SessionCmd0}
 */
proto.Sec1Payload.prototype.getSc0 = function() {
  return /** @type{?proto.SessionCmd0} */ (
    jspb.Message.getWrapperField(this, proto.SessionCmd0, 20));
};


/**
 * @param {?proto.SessionCmd0|undefined} value
 * @return {!proto.Sec1Payload} returns this
*/
proto.Sec1Payload.prototype.setSc0 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.Sec1Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Sec1Payload} returns this
 */
proto.Sec1Payload.prototype.clearSc0 = function() {
  return this.setSc0(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Sec1Payload.prototype.hasSc0 = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional SessionResp0 sr0 = 21;
 * @return {?proto.SessionResp0}
 */
proto.Sec1Payload.prototype.getSr0 = function() {
  return /** @type{?proto.SessionResp0} */ (
    jspb.Message.getWrapperField(this, proto.SessionResp0, 21));
};


/**
 * @param {?proto.SessionResp0|undefined} value
 * @return {!proto.Sec1Payload} returns this
*/
proto.Sec1Payload.prototype.setSr0 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.Sec1Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Sec1Payload} returns this
 */
proto.Sec1Payload.prototype.clearSr0 = function() {
  return this.setSr0(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Sec1Payload.prototype.hasSr0 = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional SessionCmd1 sc1 = 22;
 * @return {?proto.SessionCmd1}
 */
proto.Sec1Payload.prototype.getSc1 = function() {
  return /** @type{?proto.SessionCmd1} */ (
    jspb.Message.getWrapperField(this, proto.SessionCmd1, 22));
};


/**
 * @param {?proto.SessionCmd1|undefined} value
 * @return {!proto.Sec1Payload} returns this
*/
proto.Sec1Payload.prototype.setSc1 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.Sec1Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Sec1Payload} returns this
 */
proto.Sec1Payload.prototype.clearSc1 = function() {
  return this.setSc1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Sec1Payload.prototype.hasSc1 = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional SessionResp1 sr1 = 23;
 * @return {?proto.SessionResp1}
 */
proto.Sec1Payload.prototype.getSr1 = function() {
  return /** @type{?proto.SessionResp1} */ (
    jspb.Message.getWrapperField(this, proto.SessionResp1, 23));
};


/**
 * @param {?proto.SessionResp1|undefined} value
 * @return {!proto.Sec1Payload} returns this
*/
proto.Sec1Payload.prototype.setSr1 = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.Sec1Payload.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.Sec1Payload} returns this
 */
proto.Sec1Payload.prototype.clearSr1 = function() {
  return this.setSr1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.Sec1Payload.prototype.hasSr1 = function() {
  return jspb.Message.getField(this, 23) != null;
};


