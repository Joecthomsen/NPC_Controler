#ifndef STATE_MANAGER_H
#define STATE_MANAGER_H

#include "driver/gpio.h"

#define STATE_MANAGER_GPIO_PIN_BLUE GPIO_NUM_4
#define STATE_MANAGER_GPIO_PIN_RED GPIO_NUM_5
#define STATE_MANAGER_GPIO_PIN_YELLOW GPIO_NUM_6
#define STATE_MANAGER_GPIO_PIN_GREEN GPIO_NUM_7

#define STATE_MANAGER_INTERRUPT_TYPE GPIO_INTR_DISABLE
#define STATE_MANAGER_PIN_DIRECTION GPIO_MODE_OUTPUT
#define STATE_MANAGER_PIN_PULLUP GPIO_PULLUP_DISABLE
#define STATE_MANAGER_PIN_PULLDOWN GPIO_PULLDOWN_DISABLE
#define LOW 0
#define HIGH 1

typedef enum State_Machine
{
    STATE_STARTUP_WIFI_CONNECT,
    STATE_STARTUP_AWAIT_WIFI_PROVISIONING,
    STATE_STARTUP_INIT_DALI_COMMUNICATION,
    STATE_STARTUP_ANALYZE_DALI_BUS,
    STATE_NO_WIFI,
    STATE_CORRUPTED_DALI_BUS,
    STATE_BUS_NOT_COMMISIONED,
    STATE_NO_RESPONSE_ON_BUS,
    STATE_SYSTEM_OK,
} State_Machine;

void set_state(State_Machine state);
State_Machine get_state();
void init_state_manager();
void state_task(void *parameter);

#endif /* STATE_MANAGER_H */